https://leetcode.com/problems/maximum-product-of-word-lengths/

# Solution 1.1:
# Some optimization based on Solution 1
# beats 83%

class Solution(object):
    def maxProduct(self, words):
        """
        :type words: List[str]
        :rtype: int
        """
        r_max = 0
        words.sort(key=len, reverse=True) # optimization: sort words by length first
        masks = [0] * len(words)
        for i in range(len(words)):
            for ch in words[i]:
                masks[i] |= (1 << (ord(ch) - ord('a')))
        n = len(words)
        for i in range(len(words) - 1):
            if len(words[i]) * len(words[i]) < r_max:
                return r_max
            for j in range(i + 1, len(words)):
                if masks[i] & masks[j] == 0:
                    r_max = max(r_max, len(words[i]) * len(words[j]))
                    break
        return r_max
