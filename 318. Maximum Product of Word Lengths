https://leetcode.com/problems/maximum-product-of-word-lengths/

# Solution 1:
# extra space and bit manipulation to make duplicate checking easier
# Slow, only beats 33%

class Solution(object):
    def maxProduct(self, words):
        """
        :type words: List[str]
        :rtype: int
        """
        r_max = 0
        nums = [0] * len(words)
        for i in range(len(words)):
            word = words[i]
            for ch in word:
                nums[i] |= (1 << (ord(ch) - ord('a')))
        for i in range(len(words)):
            for j in range(i, len(words)):
                if nums[i] & nums[j] == 0:
                    r_max = max(r_max, len(words[i]) * len(words[j]))
        return r_max
